{"version":3,"sources":["webpack:///./src/components/summary.js","webpack:///./src/pages/speeches.js"],"names":["Summary","render","className","styles","summary","to","state","video","this","props","title","date","picture","class","pictureImage","src","image","alt","height","width","info","desc","dangerouslySetInnerHTML","__html","description","btns","button","React","Component","Box","posed","div","closed","y","open","transition","duration","Back","hoverable","pressable","init","scale","hover","press","query","data","initialPose","pose","backSVG","summaries","allMarkdownRemark","edges","map","node","key","id","frontmatter","svg","html"],"mappings":"kOAoDeA,E,gLA/CbC,OAAA,WACE,OACE,yBAAKC,UAAWC,IAAOC,SACrB,kBAAC,OAAD,CACEC,GAAG,WACHC,MAAO,CACLC,MAAOC,KAAKC,MAAMF,MAClBG,MAAOF,KAAKC,MAAMC,MAClBC,KAAMH,KAAKC,MAAME,OAGnB,yBAAKT,UAAWC,IAAOS,SACrB,yBACEC,MAAOV,IAAOW,aACdC,IAAKP,KAAKC,MAAMO,MAChBC,IAAI,OACJC,OAAO,MACPC,MAAM,UAIZ,yBAAKjB,UAAWC,IAAOiB,MACrB,4BACGZ,KAAKC,MAAMC,MADd,MACwBF,KAAKC,MAAME,MAEnC,yBACET,UAAWC,IAAOkB,KAClBC,wBAAyB,CAAEC,OAAQf,KAAKC,MAAMe,eAEhD,yBAAKtB,UAAWC,IAAOsB,MACrB,kBAAC,OAAD,CACEpB,GAAG,WACHC,MAAO,CACLC,MAAOC,KAAKC,MAAMF,MAClBG,MAAOF,KAAKC,MAAMC,MAClBC,KAAMH,KAAKC,MAAME,OAGnB,4BAAQT,UAAWC,IAAOuB,QAA1B,c,GAvCQC,IAAMC,WCJ5B,sCAUA,IAAMC,EAAMC,IAAMC,IAAI,CACpBC,OAAQ,CAAEC,EAAG,SACbC,KAAM,CAAED,EAAG,MAAOE,WAAY,CAAEC,SAAU,QAGtCC,EAAOP,IAAMC,IAAI,CACrBO,WAAW,EACXC,WAAW,EACXC,KAAM,CACJC,MAAO,GAETC,MAAO,CACLD,MAAO,KAETE,MAAO,CACLF,MAAO,OA+BEG,GA3BE,0BAAGC,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,kBAAChB,EAAD,CAAK3B,UAAU,YAAY4C,YAAY,SAASC,KAAK,QACnD,yBAAK7C,UAAU,eACb,kBAACmC,EAAD,KACE,kBAAC,OAAD,CAAMhC,GAAG,KACP,yBAAKU,IAAKiC,IAAS/B,IAAI,OAAOC,OAAO,KAAKC,MAAM,SAGpD,wBAAIjB,UAAU,UAAd,sBAEF,yBAAKA,UAAWC,IAAO8C,WACpBJ,EAAKK,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACV7C,MAAO2C,EAAKG,YAAY9C,MACxBC,KAAM0C,EAAKG,YAAY7C,KACvBK,MAAOqC,EAAKG,YAAYC,IACxBlD,MAAO8C,EAAKG,YAAYjD,MACxBiB,YAAa6B,EAAKK,cAQZ","file":"component---src-pages-speeches-js-a2abe0ce0b3ac1e25984.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styles from \"../styles/summary.module.css\"\n\nclass Summary extends React.Component {\n  render() {\n    return (\n      <div className={styles.summary}>\n        <Link\n          to=\"/player/\"\n          state={{\n            video: this.props.video,\n            title: this.props.title,\n            date: this.props.date,\n          }}\n        >\n          <div className={styles.picture}>\n            <img\n              class={styles.pictureImage}\n              src={this.props.image}\n              alt=\"Icon\"\n              height=\"100\"\n              width=\"100\"\n            />\n          </div>\n        </Link>\n        <div className={styles.info}>\n          <h4>\n            {this.props.title} | {this.props.date}\n          </h4>\n          <div\n            className={styles.desc}\n            dangerouslySetInnerHTML={{ __html: this.props.description }}\n          />\n          <div className={styles.btns}>\n            <Link\n              to=\"/player/\"\n              state={{\n                video: this.props.video,\n                title: this.props.title,\n                date: this.props.date,\n              }}\n            >\n              <button className={styles.button}>Watch</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Summary\n","import React from \"react\"\n// import { useStaticQuery, graphql } from \"gatsby\"\n// import Img from \"gatsby-image\"\nimport { Link, graphql } from \"gatsby\"\nimport posed from \"react-pose\"\nimport backSVG from \"../images/left-arrow.svg\"\nimport Layout from \"../components/layout\"\nimport styles from \"../styles/summaries.module.css\"\nimport Summary from \"../components/summary\"\n\nconst Box = posed.div({\n  closed: { y: \"300px\" },\n  open: { y: \"0px\", transition: { duration: 600 } },\n})\n\nconst Back = posed.div({\n  hoverable: true,\n  pressable: true,\n  init: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.2,\n  },\n  press: {\n    scale: 1.1,\n  },\n})\n\nexport default ({ data }) => (\n  <Layout>\n    <Box className=\"container\" initialPose=\"closed\" pose=\"open\">\n      <div className=\"headerOther\">\n        <Back>\n          <Link to=\"/\">\n            <img src={backSVG} alt=\"back\" height=\"32\" width=\"32\" />\n          </Link>\n        </Back>\n        <h1 className=\"center\">Gaston's Speeches</h1>\n      </div>\n      <div className={styles.summaries}>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <Summary\n            key={node.id}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            image={node.frontmatter.svg}\n            video={node.frontmatter.video}\n            description={node.html}\n          ></Summary>\n        ))}\n      </div>\n    </Box>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { type: { eq: \"video\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM YYYY\")\n            video\n            svg\n          }\n          fields {\n            slug\n          }\n          excerpt\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}